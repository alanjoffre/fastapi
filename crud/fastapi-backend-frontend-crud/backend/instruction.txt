# Instrução:

- Importante: Instruções abaixo para pessoas que estão estudando e possuem dificuldade para rodar o projeto em seu equipamento.

- Instale o VSCODE.
- Intale o Postgresql.

- Atenção, será solicitado a copia do arquivo original (Github), para o projeto principal em alguns momentos.

- Pelo Terminal do VSCODE, acesse o diretório onde será criado o projeto.
- Digite: poetry new backend.
- Renomei o diretório: 'backend\backend' para 'backend\app'.

- Atualize as linhas do arquivo: backend\pyproject.toml 

[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["SEU-NOME <seu-email>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start= "app.main:start"

- Digite o seguinte comando, para instalar a biblioteca Poetry no diretório do projeto: pip install poetry
- Digite o seguinte comando, para instalar a biblioteca Uvicorn no diretório do projeto: poetry add fastapi uvicorn

- Dentro do diretório: 'backend\app' crie um aqrquivo: main.py

- Comando para quem utiliza Prompt-comando
- Crie o ambiente virtual: python -m venv venv
- Ative o ambiente virtual: .\venv\Scripts\Activate.bat

- Comando para quem utiliza PowerShell
- Crie o ambiente virtual: python -m venv venv
- Ative o ambiente virtual: .\venv\Scripts\Activate.ps1

- Copie o arquivo 'main.py' do projeto principal baixado e copie para 'backend\app'

- Digite no terminal para instalar a seguinte biblioteca: poetry add sqlmodel
- Digite no terminal para instalar a seguinte biblioteca: poetry add sqlalchemy
- Digite no terminal para instalar a seguinte biblioteca: poetry add asyncpg
- Digite no terminal para instalar a seguinte biblioteca: poetry add psycopg2
- Digite no terminal para instalar a seguinte biblioteca: poetry add pydantic
- Digite no terminal para instalar a seguinte biblioteca: poetry add alembic

- Copie o arquivo 'config.py' do projeto principal baixado e cole em 'backend\app' 
- Atente para a seguinte linha: DB_CONFIG = f"postgresql+asyncpg://postgres:postgres@localhost:5432/test"
- Insira o seu usuário e senha do PostgreSQL: DB_CONFIG = f"postgresql+asyncpg://SEU-USUARIO:SUA-SENHA@localhost:5432/test"

- Digite: poetry export --without-hashes --format=requirements.txt >requirements.txt
- Digite: pip install -r .\requirements.txt

- Copie a pasta 'backend\app\models' do projeto baixado para 'backend\app' do seu projeto.

- Digite: alembic init migrations

- Copie a pasta 'backend\migration\env' do projeto baixado para 'backend\' do seu projeto.

- Digite: alembic revision --autogenerate -m "init_table"
- Digite: alembic upgrade head

- Acesse o programa Pgadmin e verifique se o databases: Test foi criado.

- Copie a pasta 'backend\repository' do projeto baixado para 'backend\' do seu projeto.

- Copie a pasta 'backend\controller' do projeto baixado para 'backend\' do seu projeto.

- Acesse pelo teminal do Vscode o diretório para inicar o servidor poetry: backend 
- Digite o seguinte comando para rodar o projeto: poetry run start
- Para acessar o projeto: localhost:888/docs

Créditos Lemoncode21: https://www.youtube.com/watch?v=-e7X5KqVHvM


